/***************************************************************************
 *   Copyright 2010 by Davide Bettio <davide.bettio@kdemail.net>           *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA .        *
 ***************************************************************************
 *   Name: Algorithms                                                      *
 *   Date: 11/01/2011                                                      *
 ***************************************************************************/

#ifndef _Algorithms_H_
#define _Algorithms_H_

template <typename T> T findMax(const T *array, int size)
{
    T tmpMax = array[0];
    for (int i = 0; i < size; i++){
        if (tmpMax < array[i]){
            tmpMax = array[i];
        }
    }

    return tmpMax;
}

template <typename T> T findMin(const T *array, int size)
{
    T tmpMin = array[0];
    for (int i = 0; i < size; i++){
        if (array[i] < tmpMin){
            tmpMin = array[i];
        }
    }

    return tmpMin;
}

template <typename T> int count(const T *array, const T &a, int size)
{
    int tmpCount = 0;
    for (int i = 0; i < size; i++){
        if (array[i] == a){
            tmpCount++;
        }
    }

    return tmpCount;
}

#endif
